# Лабораторная работа 02: Понятие процессов

## Описание
Создаются две программы ‒ parent и child. Перед запуском программы parent в окружении создается переменная среды CHILD_PATH с именем каталога, где находится программа child.

Родительский процесс (программа parent) после запуска получает переменные среды, сортирует их в LC_COLLATE=C и выводит в stdout. После этого входит в цикл обработки нажатий клавиатуры.

Символ «+» порождает дочерний процесс, используя fork() и execve(), запускает очередной экземпляр программы child, используя информацию о каталоге из окружения, которую получает, используя функцию getenv(). Имя программы (argv[0]) устанавливается как child_XX, где XX ‒ порядковый номер от 00 до 99. Номер инкриминируется родителем.

Символ «*» порождает дочерний процесс аналогично предыдущему случаю, однако информацию о его расположении получает, сканируя массив параметров среды, переданный в третьем параметре функции main().

Символ «&» порождает дочерний процесс аналогично предыдущему случаю, однако информацию о его расположении получает, сканируя массив параметров среды, указанный в переданный во внешней переменной extern char **environ, установленной хост-средой при запуске (см. IEEE Std 1003.1-2017).

При запуске дочернего процесса ему передается сокращенное окружение, включающее набор переменных, указанных в файле, который передается родительскому процессу как параметр командной строки. Минимальный набор переменных должен включать SHELL, HOSTNAME, LOGNAME, HOME, LANG, TERM, USER, LC_COLLATE, PATH. Дочерний процесс открывает этот файл, считывает имена переменных, получает из окружения их значение и выводит в stdout.

Дочерний процесс (программа child) выводит свое имя, pid, ppid, открывает файл с набором переменных, считывает их имена, получает из окружения, переданного ему при запуске их значения, выводит в stdout и завершается.
Символ «q» завершает выполнение родительского процесса.

---

## Состав проекта
- `parent.c` — родительская программа, которая создает дочерние процессы и передает им управление.
- `child.c` — дочерняя программа, которая читает файл env.txt и выводит значения переменных окружения.
- `env.txt` — текстовый файл, содержащий список переменных окружения для вывода.
- `Makefile` — файл для автоматизации сборки проекта.
- `build/` — директория, в которой находятся скомпилированные исполняемые файлы.

---

## Требования
- Операционная система: Linux.
- Компилятор: GCC.
- Установленные утилиты make.

---

### Сборка в режиме отладки (по умолчанию)

make

### Сборка в режиме релиза

make MODE=release

## Запуск программы

make run

Эта команда:
1. Очистит предыдущие сборки (`make clean`)
2. Соберет программу заново
3. Запустит родительский процесс, который создаст дочерний процесс

## Очистка проекта
Для удаления скомпилированных файлов:

make clean
